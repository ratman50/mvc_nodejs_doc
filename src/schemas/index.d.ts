/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/calculator": {
    /** @description Récupère tous les calculs */
    get: operations["getAllCalculations"];
  };
  "/health": {
    /** @description Health check endpoint for calculator API */
    get: operations["healthCheck"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description Calculation command */
    CalculatorCommand: {
      /** @enum {string} */
      operator: "+" | "-" | "*" | "/";
      operand1: number;
      operand2: number;
    };
    /** @description Calculation result */
    CalculatorResult: components["schemas"]["CalculatorCommand"] & {
      /** @description Unique ID of the calculation */
      id: string;
      result?: number;
      message?: string;
      /**
       * @description Number of milliseconds since Epoch time
       * @example 1688612539479
       */
      timestamp: number;
    };
    ErrorModel: {
      message: string;
    };
    /** @description health check status */
    HealthStatus: {
      /** @enum {string} */
      status: "OK";
      /**
       * @description Number of milliseconds since Epoch time
       * @example 15588612539479
       */
      timestamp: number;
    };
  };
  responses: {
    /** @description Internal server error */
    InternalServerError: {
      content: {
        "application/json": components["schemas"]["ErrorModel"];
      };
    };
    /** @description Not found error */
    NotFoundError: {
      content: {
        "application/json": components["schemas"]["ErrorModel"];
      };
    };
  };
  parameters: {
    /** @description Calculator ID */
    CalculatorId: string;
  };
  requestBodies: {
    /** @description Calculator command request body */
    CalculatorCommand: {
      content: {
        "application/json": components["schemas"]["CalculatorCommand"];
      };
    };
  };
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** @description Récupère tous les calculs */
  getAllCalculations: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CalculatorResult"][];
        };
      };
      500: components["responses"]["InternalServerError"];
    };
  };
  /** @description Health check endpoint for calculator API */
  healthCheck: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["HealthStatus"];
        };
      };
      500: components["responses"]["InternalServerError"];
    };
  };
}
